import Head from 'next/head';
import useMyAccount from '@/lib/hooks/useMyAccount';
import { GetServerSideProps } from 'next';
import { clearClientCookie, setClientCookie } from '@/lib/client';
import { dehydrate, QueryClient } from '@tanstack/query-core';
import { queryKey } from '@/lib/queryKey';
import { getMyAccount } from '@/lib/apis/auth';
import BasicLayout from '@/components/layouts/BasicLayout';
import UserProfile from '@/components/profile/UserProfile';
import { useThemeEffect } from '@/lib/hooks/useThemeEffect';
import { useQuery } from '@tanstack/react-query';
import { getUserProfile } from '@/lib/apis/user';
import { useRouter } from 'next/router';

function UserProfilePage() {
  const router = useRouter();
  const username = router.query.username as string;

  useThemeEffect();

  return (
    <>
      <Head>
        <title>{username.substring(1)}님의 프로필</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <BasicLayout>
        <UserProfile />
      </BasicLayout>
    </>
  );
}

export const getServerSideProps: GetServerSideProps = async (ctx) => {
  const { req, res } = ctx;
  const username = ctx.query.username as string;

  const { cookies } = req;
  if (!cookies.access_token) {
    return {
      redirect: {
        permanent: false,
        destination: '/login',
      },
      props: {},
    };
  }

  clearClientCookie();
  const queryClient = new QueryClient();
  const cookie = req ? req.headers.cookie : '';
  if (!cookie) {
    return {
      props: {},
    };
  }

  setClientCookie(cookie);
  await queryClient.prefetchQuery([queryKey.CURRENT_USER], getMyAccount, {});
  await queryClient.prefetchQuery(
    queryKey.USER(username.substring(1)),
    () => getUserProfile(username.substring(1)),
    {},
  );

  return {
    props: {
      dehydratedState: JSON.parse(JSON.stringify(dehydrate(queryClient))),
    },
  };
};

export default UserProfilePage;
